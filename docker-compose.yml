version: '3.8'  #Docker Compose 파일의 버전 명시.
services:       #서비스 정의하는 블록-> 각 컨테이너 정의.
  nginx:        #nginx 웹 서버 설정.
    build: ./nginx        #nginx의 Dockerfile이 위치한 경로
    container_name: nginx   #생성될 컨테이너 이름
    ports:
      - "8080:80"         #호스트의 8080 포트를 컨테이너의 80포트와 연결(외부에서 접속 가능.)
    volumes:
      - ./nginx/html:/usr/share/nginx/html  #호스트의 html폴더를 컨테이너의 nginx html경로에 연
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - flask        #flask가 먼저 실행된 후 nginx가 실행되도록 설정.

  flask:     #flask 서비스 정의.
    build: ./Flask     #flask의 Dockerfile이 위치한 경로.
    container_name: flask   #생성될 컨테이너 이름.
    ports:
      - "5001:5000"    #호스트의 5001포트를 컨테이너의 5000포트와 연결.
    depends_on:
      - dbmaria        #dbmaria가 먼저 실행된 후 flask가 실행되도록 설정.

  dbmaria:      #MariaDB 데이터베이스 서비스 정의.
    image: mariadb:10.5
    container_name: dbmaria    #생성될 컨테이너 이름.
    environment:
      MYSQL_ROOT_PASSWORD: root  #MariaDB 루트 비밀번호 설정.
      MYSQL_DATABASE: quizdb     #초기 생성할 DB이름.
      MYSQL_USER: user           #MariaDB 사용자 이름.
      MYSQL_PASSWORD: password   #MariaDB 사용자 비밀번호.
    volumes:
      - ./dbmaria/quizdb_backup.sql:/docker-entrypoint-initdb.d/init.sql   #컨테이너 시작 시 실행될 초기화 SQL 파일.
    ports:
      - "3306:3306"    #호스트의 3306포트를 컨테이너의 3306포트와 연결.
